package com.cloned.hackdroid;

import java.io.InputStream;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

import junit.framework.Assert;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;

public class PressureMapFragment extends Fragment {

	Button StartCrackingBtn;
	EditText usr_nm;
	Context context;
	Assert myAssert;
//    Session session;
//    Channel channel;

	public static Fragment newInstance(Context context) {
		PressureMapFragment f = new PressureMapFragment();

		return f;
	}


	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {

		
		 new Thread(new Runnable()
		    {
		        public void run()
		        {
//		            connectSSH();
		        }
		    }).start();
		 
		 
		 
		 
		 
		// donno if working yet
		// SharedPreferences preferences =
		// this.getActivity().getSharedPreferences("pref",0);

		// Writing data to SharedPreferences
		// if (preferences == null) {
		// @SuppressWarnings("null")
		// SharedPreferences.Editor editor = preferences.edit();
		// editor.putFloat("Area1", 46);
		// editor.putFloat("Area2", 74);
		// editor.putFloat("Area3", 62);
		// editor.putFloat("Area4", 56);
		// editor.putFloat("Area5", 47);
		// editor.putFloat("Area6", 56);
		// editor.putFloat("Area7", 85);
		// editor.putFloat("Area8", 68);
		// editor.commit();
		// }

		View android = inflater.inflate(R.layout.pressuremap, container, false);
		System.out.println("working");
		StartCrackingBtn = ((Button) android.findViewById(R.id.button1));
		usr_nm = ((EditText) android.findViewById(R.id.usrtxt));

		// Generating UI elements
		// imageResult = ((ImageView)android.findViewById(R.id.PressureMap1));
		// pressureBar = ((SeekBar)android.findViewById(R.id.pressurebar));
		// PressureLink = ((CheckBox)android.findViewById(R.id.checkBox1));
		// PressureLink.setChecked(true);
		// //Gets the first image, Random pressure
		// bitmapMaster = BitmapFactory.decodeResource(this.getResources(),
		// R.drawable.cushionareas);
		// //puts the image into the ImageResult frame
		// imageResult.setImageBitmap(bitmapMaster);
		
		
		StartCrackingBtn.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {

				
				
			}
			
		 });

		return android;
	}
	
	public class SShConnect {
		
		public static void main(String[] args) {
	        String host="ssh.journaldev.com";
	        String user="sshuser";
	        String password="sshpwd";
	        String command1="ls -ltr";
	        try{
	             
	            java.util.Properties config = new java.util.Properties(); 
	            config.put("StrictHostKeyChecking", "no");
	            JSch jsch = new JSch();
	            Session session=jsch.getSession(user, host, 22);
	            session.setPassword(password);
	            session.setConfig(config);
	            session.connect();
	            System.out.println("Connected");
	             
	            Channel channel=session.openChannel("exec");
	            ((ChannelExec)channel).setCommand(command1);
	            channel.setInputStream(null);
	            ((ChannelExec)channel).setErrStream(System.err);
	             
	            InputStream in=channel.getInputStream();
	            channel.connect();
	            byte[] tmp=new byte[1024];
	            while(true){
	              while(in.available()>0){
	                int i=in.read(tmp, 0, 1024);
	                if(i<0)break;
	                System.out.print(new String(tmp, 0, i));
	              }
	              if(channel.isClosed()){
	                System.out.println("exit-status: "+channel.getExitStatus());
	                break;
	              }
	              try{Thread.sleep(1000);}catch(Exception ee){}
	            }
	            channel.disconnect();
	            session.disconnect();
	            System.out.println("DONE");
	        }catch(Exception e){
	            e.printStackTrace();
	        }
	 
	    }
		
		
	}
	
    
	
	
	

}