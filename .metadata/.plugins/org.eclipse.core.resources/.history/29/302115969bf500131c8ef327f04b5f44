/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class chilkatJNI {
  public final static native byte[] SWIG_JavaArrayOutUchar(long jarg1, long jarg2, long jarg3);
  public final static native void SWIG_JavaArrayInUchar(long jarg1, long jarg2, CkByteData jarg2_, byte[] jarg3);
  public final static native void SYSTEMTIME_wYear_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wYear_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMonth_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMonth_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wDayOfWeek_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wDayOfWeek_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wDay_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wDay_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wHour_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wHour_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMinute_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMinute_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wSecond_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wSecond_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native void SYSTEMTIME_wMilliseconds_set(long jarg1, SYSTEMTIME jarg1_, int jarg2);
  public final static native int SYSTEMTIME_wMilliseconds_get(long jarg1, SYSTEMTIME jarg1_);
  public final static native long new_SYSTEMTIME();
  public final static native void delete_SYSTEMTIME(long jarg1);
  public final static native long new_CkString();
  public final static native void delete_CkString(long jarg1);
  public final static native boolean CkString_loadFile(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native char CkString_charAt(long jarg1, CkString jarg1_, int jarg2);
  public final static native int CkString_intValue(long jarg1, CkString jarg1_);
  public final static native double CkString_doubleValue(long jarg1, CkString jarg1_);
  public final static native int CkString_countCharOccurances(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_appendCurrentDateRfc822(long jarg1, CkString jarg1_);
  public final static native void CkString_setStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_endsWith(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_endsWithStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_beginsWithStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native int CkString_indexOf(long jarg1, CkString jarg1_, String jarg2);
  public final static native int CkString_indexOfStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native int CkString_replaceAll(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_, long jarg3, CkString jarg3_);
  public final static native boolean CkString_replaceFirst(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_, long jarg3, CkString jarg3_);
  public final static native long CkString_substring(long jarg1, CkString jarg1_, int jarg2, int jarg3);
  public final static native boolean CkString_matchesStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_matches(long jarg1, CkString jarg1_, String jarg2);
  public final static native long CkString_getChar(long jarg1, CkString jarg1_, int jarg2);
  public final static native int CkString_removeAll(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_removeFirst(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_chopAtStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_urlDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_urlEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_base64Decode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_base64Encode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_qpDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_qpEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_hexDecode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_hexEncode(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_entityDecode(long jarg1, CkString jarg1_);
  public final static native void CkString_entityEncode(long jarg1, CkString jarg1_);
  public final static native void CkString_appendUtf8(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendAnsi(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_clear(long jarg1, CkString jarg1_);
  public final static native void CkString_prepend(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendInt(long jarg1, CkString jarg1_, int jarg2);
  public final static native void CkString_append(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_appendChar(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_appendN(long jarg1, CkString jarg1_, String jarg2, int jarg3);
  public final static native void CkString_appendStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_appendEnc(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native String CkString_getEnc(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setString(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setStringAnsi(long jarg1, CkString jarg1_, String jarg2);
  public final static native void CkString_setStringUtf8(long jarg1, CkString jarg1_, String jarg2);
  public final static native String CkString_getAnsi(long jarg1, CkString jarg1_);
  public final static native String CkString_getUtf8(long jarg1, CkString jarg1_);
  public final static native int CkString_compareStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkString_getString(long jarg1, CkString jarg1_);
  public final static native int CkString_getSizeUtf8(long jarg1, CkString jarg1_);
  public final static native int CkString_getSizeAnsi(long jarg1, CkString jarg1_);
  public final static native int CkString_getNumChars(long jarg1, CkString jarg1_);
  public final static native void CkString_trim(long jarg1, CkString jarg1_);
  public final static native void CkString_trim2(long jarg1, CkString jarg1_);
  public final static native void CkString_trimInsideSpaces(long jarg1, CkString jarg1_);
  public final static native int CkString_replaceAllOccurances(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native boolean CkString_replaceFirstOccurance(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native void CkString_toCRLF(long jarg1, CkString jarg1_);
  public final static native void CkString_toLF(long jarg1, CkString jarg1_);
  public final static native void CkString_eliminateChar(long jarg1, CkString jarg1_, char jarg2, int jarg3);
  public final static native char CkString_lastChar(long jarg1, CkString jarg1_);
  public final static native void CkString_shorten(long jarg1, CkString jarg1_, int jarg2);
  public final static native void CkString_toLowerCase(long jarg1, CkString jarg1_);
  public final static native void CkString_toUpperCase(long jarg1, CkString jarg1_);
  public final static native void CkString_encodeXMLSpecial(long jarg1, CkString jarg1_);
  public final static native void CkString_decodeXMLSpecial(long jarg1, CkString jarg1_);
  public final static native boolean CkString_containsSubstring(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_containsSubstringNoCase(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equals(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equalsStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native boolean CkString_equalsIgnoreCase(long jarg1, CkString jarg1_, String jarg2);
  public final static native boolean CkString_equalsIgnoreCaseStr(long jarg1, CkString jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkString_removeChunk(long jarg1, CkString jarg1_, int jarg2, int jarg3);
  public final static native void CkString_removeCharOccurances(long jarg1, CkString jarg1_, char jarg2);
  public final static native void CkString_replaceChar(long jarg1, CkString jarg1_, char jarg2, char jarg3);
  public final static native void CkString_chopAtFirstChar(long jarg1, CkString jarg1_, char jarg2);
  public final static native boolean CkString_saveToFile(long jarg1, CkString jarg1_, String jarg2, String jarg3);
  public final static native long CkString_split(long jarg1, CkString jarg1_, char jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long CkString_split2(long jarg1, CkString jarg1_, String jarg2, boolean jarg3, boolean jarg4, boolean jarg5);
  public final static native long CkString_tokenize(long jarg1, CkString jarg1_, String jarg2);
  public final static native long CkString_splitAtWS(long jarg1, CkString jarg1_);
  public final static native boolean CkString_beginsWith(long jarg1, CkString jarg1_, String jarg2);
  public final static native long new_CkDateTime();
  public final static native void delete_CkDateTime(long jarg1);
  public final static native int CkDateTime_get_IsDst(long jarg1, CkDateTime jarg1_);
  public final static native int CkDateTime_get_UtcOffset(long jarg1, CkDateTime jarg1_);
  public final static native void CkDateTime_SetFromCurrentSystemTime(long jarg1, CkDateTime jarg1_);
  public final static native boolean CkDateTime_SetFromRfc822(long jarg1, CkDateTime jarg1_, String jarg2);
  public final static native int CkDateTime_GetAsUnixTime(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long CkDateTime_GetAsUnixTime64(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native double CkDateTime_GetAsOleDate(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native int CkDateTime_GetAsDosDate(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long CkDateTime_GetAsDateTimeTicks(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native void CkDateTime_SetFromUnixTime(long jarg1, CkDateTime jarg1_, boolean jarg2, int jarg3);
  public final static native void CkDateTime_SetFromUnixTime64(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3);
  public final static native void CkDateTime_SetFromOleDate(long jarg1, CkDateTime jarg1_, boolean jarg2, double jarg3);
  public final static native void CkDateTime_SetFromDosDate(long jarg1, CkDateTime jarg1_, boolean jarg2, int jarg3);
  public final static native void CkDateTime_SetFromDateTimeTicks(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3);
  public final static native boolean CkDateTime_Serialize(long jarg1, CkDateTime jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkDateTime_serialize(long jarg1, CkDateTime jarg1_);
  public final static native void CkDateTime_DeSerialize(long jarg1, CkDateTime jarg1_, String jarg2);
  public final static native boolean CkDateTime_AddDays(long jarg1, CkDateTime jarg1_, int jarg2);
  public final static native boolean CkDateTime_GetAsRfc822(long jarg1, CkDateTime jarg1_, boolean jarg2, long jarg3, CkString jarg3_);
  public final static native String CkDateTime_getAsRfc822(long jarg1, CkDateTime jarg1_, boolean jarg2);
  public final static native long new_CkDtObj();
  public final static native void delete_CkDtObj(long jarg1);
  public final static native boolean CkDtObj_get_Utc(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Utc(long jarg1, CkDtObj jarg1_, boolean jarg2);
  public final static native int CkDtObj_get_Year(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Year(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Month(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Month(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Day(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Day(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Hour(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Hour(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Minute(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Minute(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_Second(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_Second(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_StructTmYear(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_StructTmYear(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native int CkDtObj_get_StructTmMonth(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_put_StructTmMonth(long jarg1, CkDtObj jarg1_, int jarg2);
  public final static native boolean CkDtObj_Serialize(long jarg1, CkDtObj jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkDtObj_serialize(long jarg1, CkDtObj jarg1_);
  public final static native void CkDtObj_DeSerialize(long jarg1, CkDtObj jarg1_, String jarg2);
  public final static native long new_CkByteData();
  public final static native void delete_CkByteData(long jarg1);
  public final static native byte[] CkByteData_toByteArray(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendByteArray(long jarg1, CkByteData jarg1_, byte[] jarg2);
  public final static native long CkByteData_getRange(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native String CkByteData_getRangeStr(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native String CkByteData_to_s(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendRandom(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native void CkByteData_appendInt(long jarg1, CkByteData jarg1_, int jarg2, boolean jarg3);
  public final static native void CkByteData_appendShort(long jarg1, CkByteData jarg1_, short jarg2, boolean jarg3);
  public final static native String CkByteData_getEncodedRange(long jarg1, CkByteData jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void CkByteData_appendRange(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_, int jarg3, int jarg4);
  public final static native void CkByteData_ensureBuffer(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_findBytes2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native int CkByteData_findBytes(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native boolean CkByteData_beginsWith2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_beginsWith(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native void CkByteData_removeChunk(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native void CkByteData_byteSwap4321(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_pad(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native void CkByteData_unpad(long jarg1, CkByteData jarg1_, int jarg2, int jarg3);
  public final static native boolean CkByteData_is7bit(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_clear(long jarg1, CkByteData jarg1_);
  public final static native int CkByteData_getSize(long jarg1, CkByteData jarg1_);
  public final static native void CkByteData_appendEncoded(long jarg1, CkByteData jarg1_, String jarg2, String jarg3);
  public final static native void CkByteData_encode(long jarg1, CkByteData jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native long CkByteData_getData(long jarg1, CkByteData jarg1_);
  public final static native long CkByteData_getBytes(long jarg1, CkByteData jarg1_);
  public final static native String CkByteData_getEncoded(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_append2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_equals2(long jarg1, CkByteData jarg1_, String jarg2, int jarg3);
  public final static native boolean CkByteData_equals(long jarg1, CkByteData jarg1_, long jarg2, CkByteData jarg2_);
  public final static native void CkByteData_appendStr(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_appendChar(long jarg1, CkByteData jarg1_, char jarg2);
  public final static native short CkByteData_getByte(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native char CkByteData_getChar(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native long CkByteData_getUInt(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_getInt(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native int CkByteData_getUShort(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native short CkByteData_getShort(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native boolean CkByteData_loadFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native boolean CkByteData_saveFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native boolean CkByteData_appendFile(long jarg1, CkByteData jarg1_, String jarg2);
  public final static native void CkByteData_shorten(long jarg1, CkByteData jarg1_, int jarg2);
  public final static native long new_CkSshKey();
  public final static native void delete_CkSshKey(long jarg1);
  public final static native void CkSshKey_LastErrorXml(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkSshKey_LastErrorHtml(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkSshKey_LastErrorText(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkSshKey_get_LastErrorHtml(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_lastErrorHtml(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_get_LastErrorText(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_lastErrorText(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_get_LastErrorXml(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_lastErrorXml(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_get_Version(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_version(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_get_DebugLogFilePath(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_debugLogFilePath(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_put_DebugLogFilePath(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_get_VerboseLogging(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_put_VerboseLogging(long jarg1, CkSshKey jarg1_, boolean jarg2);
  public final static native boolean CkSshKey_SaveLastError(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_get_IsDsaKey(long jarg1, CkSshKey jarg1_);
  public final static native boolean CkSshKey_get_IsPrivateKey(long jarg1, CkSshKey jarg1_);
  public final static native boolean CkSshKey_get_IsRsaKey(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_get_Password(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_password(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_put_Password(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native void CkSshKey_get_Comment(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_comment(long jarg1, CkSshKey jarg1_);
  public final static native void CkSshKey_put_Comment(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_FromOpenSshPrivateKey(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_FromOpenSshPublicKey(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_FromPuttyPrivateKey(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_FromRfc4716PublicKey(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_FromXml(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_GenFingerprint(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_genFingerprint(long jarg1, CkSshKey jarg1_);
  public final static native boolean CkSshKey_GenerateDsaKey(long jarg1, CkSshKey jarg1_, int jarg2);
  public final static native boolean CkSshKey_GenerateRsaKey(long jarg1, CkSshKey jarg1_, int jarg2, int jarg3);
  public final static native boolean CkSshKey_LoadText(long jarg1, CkSshKey jarg1_, String jarg2, long jarg3, CkString jarg3_);
  public final static native String CkSshKey_loadText(long jarg1, CkSshKey jarg1_, String jarg2);
  public final static native boolean CkSshKey_SaveText(long jarg1, CkSshKey jarg1_, String jarg2, String jarg3);
  public final static native boolean CkSshKey_ToOpenSshPrivateKey(long jarg1, CkSshKey jarg1_, boolean jarg2, long jarg3, CkString jarg3_);
  public final static native String CkSshKey_toOpenSshPrivateKey(long jarg1, CkSshKey jarg1_, boolean jarg2);
  public final static native boolean CkSshKey_ToOpenSshPublicKey(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_toOpenSshPublicKey(long jarg1, CkSshKey jarg1_);
  public final static native boolean CkSshKey_ToPuttyPrivateKey(long jarg1, CkSshKey jarg1_, boolean jarg2, long jarg3, CkString jarg3_);
  public final static native String CkSshKey_toPuttyPrivateKey(long jarg1, CkSshKey jarg1_, boolean jarg2);
  public final static native boolean CkSshKey_ToRfc4716PublicKey(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_toRfc4716PublicKey(long jarg1, CkSshKey jarg1_);
  public final static native boolean CkSshKey_ToXml(long jarg1, CkSshKey jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSshKey_toXml(long jarg1, CkSshKey jarg1_);
  public final static native long new_CkSsh();
  public final static native void delete_CkSsh(long jarg1);
  public final static native void CkSsh_LastErrorXml(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkSsh_LastErrorHtml(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkSsh_LastErrorText(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native void CkSsh_get_LastErrorHtml(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_lastErrorHtml(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_LastErrorText(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_lastErrorText(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_LastErrorXml(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_lastErrorXml(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_Version(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_version(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_DebugLogFilePath(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_debugLogFilePath(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_DebugLogFilePath(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native boolean CkSsh_get_VerboseLogging(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_VerboseLogging(long jarg1, CkSsh jarg1_, boolean jarg2);
  public final static native boolean CkSsh_SaveLastError(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_ChannelOpenFailCode(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_ChannelOpenFailReason(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_channelOpenFailReason(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_ClientIdentifier(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_clientIdentifier(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_ClientIdentifier(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native void CkSsh_get_ClientIpAddress(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_clientIpAddress(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_ClientIpAddress(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_ConnectTimeoutMs(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_ConnectTimeoutMs(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native int CkSsh_get_DisconnectCode(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_DisconnectReason(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_disconnectReason(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_ForceCipher(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_forceCipher(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_ForceCipher(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_HeartbeatMs(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HeartbeatMs(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native void CkSsh_get_HostKeyAlg(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_hostKeyAlg(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HostKeyAlg(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native void CkSsh_get_HostKeyFingerprint(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_hostKeyFingerprint(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_get_HttpProxyAuthMethod(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_httpProxyAuthMethod(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HttpProxyAuthMethod(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native void CkSsh_get_HttpProxyDomain(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_httpProxyDomain(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HttpProxyDomain(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native void CkSsh_get_HttpProxyHostname(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_httpProxyHostname(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HttpProxyHostname(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native void CkSsh_get_HttpProxyPassword(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_httpProxyPassword(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HttpProxyPassword(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_HttpProxyPort(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HttpProxyPort(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native void CkSsh_get_HttpProxyUsername(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_httpProxyUsername(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_HttpProxyUsername(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_IdleTimeoutMs(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_IdleTimeoutMs(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_get_IsConnected(long jarg1, CkSsh jarg1_);
  public final static native boolean CkSsh_get_KeepSessionLog(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_KeepSessionLog(long jarg1, CkSsh jarg1_, boolean jarg2);
  public final static native int CkSsh_get_MaxPacketSize(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_MaxPacketSize(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native int CkSsh_get_NumOpenChannels(long jarg1, CkSsh jarg1_);
  public final static native boolean CkSsh_get_PasswordChangeRequested(long jarg1, CkSsh jarg1_);
  public final static native int CkSsh_get_ReadTimeoutMs(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_ReadTimeoutMs(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native void CkSsh_get_SessionLog(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_sessionLog(long jarg1, CkSsh jarg1_);
  public final static native int CkSsh_get_SoRcvBuf(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SoRcvBuf(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native int CkSsh_get_SoSndBuf(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SoSndBuf(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native void CkSsh_get_SocksHostname(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_socksHostname(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SocksHostname(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native void CkSsh_get_SocksPassword(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_socksPassword(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SocksPassword(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_SocksPort(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SocksPort(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native void CkSsh_get_SocksUsername(long jarg1, CkSsh jarg1_, long jarg2, CkString jarg2_);
  public final static native String CkSsh_socksUsername(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SocksUsername(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_get_SocksVersion(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_SocksVersion(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_get_StderrToStdout(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_StderrToStdout(long jarg1, CkSsh jarg1_, boolean jarg2);
  public final static native boolean CkSsh_get_TcpNoDelay(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_TcpNoDelay(long jarg1, CkSsh jarg1_, boolean jarg2);
  public final static native boolean CkSsh_get_PreferIpv6(long jarg1, CkSsh jarg1_);
  public final static native void CkSsh_put_PreferIpv6(long jarg1, CkSsh jarg1_, boolean jarg2);
  public final static native boolean CkSsh_AuthenticatePk(long jarg1, CkSsh jarg1_, String jarg2, long jarg3, CkSshKey jarg3_);
  public final static native boolean CkSsh_AuthenticatePw(long jarg1, CkSsh jarg1_, String jarg2, String jarg3);
  public final static native boolean CkSsh_AuthenticatePwPk(long jarg1, CkSsh jarg1_, String jarg2, String jarg3, long jarg4, CkSshKey jarg4_);
  public final static native boolean CkSsh_ChannelIsOpen(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native int CkSsh_ChannelPoll(long jarg1, CkSsh jarg1_, int jarg2, int jarg3);
  public final static native int CkSsh_ChannelRead(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native int CkSsh_ChannelReadAndPoll(long jarg1, CkSsh jarg1_, int jarg2, int jarg3);
  public final static native int CkSsh_ChannelReadAndPoll2(long jarg1, CkSsh jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native boolean CkSsh_ChannelReceiveToClose(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_ChannelReceiveUntilMatch(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, String jarg4, boolean jarg5);
  public final static native boolean CkSsh_ChannelReceiveUntilMatchN(long jarg1, CkSsh jarg1_, int jarg2, long jarg3, String jarg4, boolean jarg5);
  public final static native boolean CkSsh_ChannelReceivedClose(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_ChannelReceivedEof(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_ChannelReceivedExitStatus(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_ChannelSendClose(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_ChannelSendData(long jarg1, CkSsh jarg1_, int jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkSsh_ChannelSendEof(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_ChannelSendString(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native void CkSsh_ClearTtyModes(long jarg1, CkSsh jarg1_);
  public final static native boolean CkSsh_Connect(long jarg1, CkSsh jarg1_, String jarg2, int jarg3);
  public final static native void CkSsh_Disconnect(long jarg1, CkSsh jarg1_);
  public final static native int CkSsh_GetChannelExitStatus(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native int CkSsh_GetChannelNumber(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_GetChannelType(long jarg1, CkSsh jarg1_, int jarg2, long jarg3, CkString jarg3_);
  public final static native String CkSsh_getChannelType(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native String CkSsh_channelType(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_GetReceivedData(long jarg1, CkSsh jarg1_, int jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkSsh_GetReceivedDataN(long jarg1, CkSsh jarg1_, int jarg2, int jarg3, long jarg4, CkByteData jarg4_);
  public final static native int CkSsh_GetReceivedNumBytes(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_GetReceivedStderr(long jarg1, CkSsh jarg1_, int jarg2, long jarg3, CkByteData jarg3_);
  public final static native boolean CkSsh_GetReceivedText(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, long jarg4, CkString jarg4_);
  public final static native String CkSsh_getReceivedText(long jarg1, CkSsh jarg1_, int jarg2, String jarg3);
  public final static native String CkSsh_receivedText(long jarg1, CkSsh jarg1_, int jarg2, String jarg3);
  public final static native boolean CkSsh_GetReceivedTextS(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, String jarg4, long jarg5, CkString jarg5_);
  public final static native String CkSsh_getReceivedTextS(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native String CkSsh_receivedTextS(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native int CkSsh_OpenCustomChannel(long jarg1, CkSsh jarg1_, String jarg2);
  public final static native int CkSsh_OpenDirectTcpIpChannel(long jarg1, CkSsh jarg1_, String jarg2, int jarg3);
  public final static native int CkSsh_OpenSessionChannel(long jarg1, CkSsh jarg1_);
  public final static native boolean CkSsh_PeekReceivedText(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, long jarg4, CkString jarg4_);
  public final static native String CkSsh_peekReceivedText(long jarg1, CkSsh jarg1_, int jarg2, String jarg3);
  public final static native boolean CkSsh_ReKey(long jarg1, CkSsh jarg1_);
  public final static native boolean CkSsh_SendIgnore(long jarg1, CkSsh jarg1_);
  public final static native boolean CkSsh_SendReqExec(long jarg1, CkSsh jarg1_, int jarg2, String jarg3);
  public final static native boolean CkSsh_SendReqPty(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native boolean CkSsh_SendReqSetEnv(long jarg1, CkSsh jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native boolean CkSsh_SendReqShell(long jarg1, CkSsh jarg1_, int jarg2);
  public final static native boolean CkSsh_SendReqSignal(long jarg1, CkSsh jarg1_, int jarg2, String jarg3);
  public final static native boolean CkSsh_SendReqSubsystem(long jarg1, CkSsh jarg1_, int jarg2, String jarg3);
  public final static native boolean CkSsh_SendReqWindowChange(long jarg1, CkSsh jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native boolean CkSsh_SendReqX11Forwarding(long jarg1, CkSsh jarg1_, int jarg2, boolean jarg3, String jarg4, String jarg5, int jarg6);
  public final static native boolean CkSsh_SendReqXonXoff(long jarg1, CkSsh jarg1_, int jarg2, boolean jarg3);
  public final static native boolean CkSsh_SetTtyMode(long jarg1, CkSsh jarg1_, String jarg2, int jarg3);
  public final static native boolean CkSsh_UnlockComponent(long jarg1, CkSsh jarg1_, String jarg2);
}
